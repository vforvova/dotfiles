{"name":"tidalcycles","main":"./lib/tidalcycles","version":"0.12.1","description":"Atom package for TidalCycles, a language for live coding pattern.","activationCommands":{"atom-text-editor":["tidalcycles:eval","tidalcycles:eval-multi-line"],"atom-workspace":"tidalcycles:boot"},"dependencies":{"atom-space-pen-views":"^2.0.3"},"repository":{"type":"git","url":"git+https://github.com/tidalcycles/atom-tidalcycles.git"},"license":"GPL-3.0","engines":{"atom":">=0.174.0 <2.0.0"},"readme":"# TidalCycles plugin for Atom\n\n[TidalCycles](https://tidalcycles.org) is a live-coding pattern language\n\nFor installation instructions, please visit:\n  http://tidalcycles.org/getting_started.html\n\nThen, you can:\n  * Open a `.tidal` file\n\n  * `shift+enter` to evaluate the current line or selection\n\n  * `cmd+enter` to evaluate multiple-lines or selection\n\nTo send patterns to [SuperDirt](https://github.com/musikinformatik/SuperDirt), use `d1` .. `d9`, e.g.:\n\n````\nd1 $ sound \"bd cp\"\n````\n\nTo send patterns to [classic dirt](https://github.com/tidalcycles/dirt), use `c1` .. `c9`, e.g.:\n\n````\nc1 $ sound \"bd cp\"\n````\n\n# Configurable Boot Options\n\nBy default, Atom will use a default Tidal bootup sequence that doesn't really do\nanything special other than create the `d1..d9` and `c1..c9` Dirt connections.\n\nIf you'd like to provide a path to your own custom boot file on your computer, use\nthe *Boot Tidal Path* setting to do so.\n\nFurther, if you'd like Atom to locate a `BootTidal.hs` file in the current directory,\ncheck the *Use Boot File In Current Directory* option.\n\nBoot file order of precedence:\n\n1. Current directory `BootTidal.hs`\n2. Custom Boot Tidal Path\n3. Default bootup provided by the package\n\n## Sample Default Boot File\n\nIf you create your own boot file, you may start with the default:\n\n```\n:set -XOverloadedStrings\n:set prompt \"\"\n:module Sound.Tidal.Context\n\n(cps, nudger, getNow) <- cpsUtils'\n\n(d1,t1) <- superDirtSetters getNow\n(d2,t2) <- superDirtSetters getNow\n(d3,t3) <- superDirtSetters getNow\n(d4,t4) <- superDirtSetters getNow\n(d5,t5) <- superDirtSetters getNow\n(d6,t6) <- superDirtSetters getNow\n(d7,t7) <- superDirtSetters getNow\n(d8,t8) <- superDirtSetters getNow\n(d9,t9) <- superDirtSetters getNow\n\n\nlet bps x = cps (x/2)\nlet hush = mapM_ ($ silence) [d1,d2,d3,d4,d5,d6,d7,d8,d9]\nlet solo = (>>) hush\n\n:set prompt \"tidal> \"\n```\n\n# Contributing\n\nIf you'd like to contribute to this package, here are some guidelines:\n\n## JavaScript Formatting\n\nA `.jsbeautifyfc` file is used to define JavaScript formatting settings. Please use\na beautifier package (we recommend `atom-beautify`) to format your changes with\nthese settings.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tidalcycles/atom-tidalcycles/issues"},"homepage":"https://github.com/tidalcycles/atom-tidalcycles#readme","_id":"tidalcycles@0.12.1","_shasum":"2e40059757bf3bd27e78e445e2ee8d884998d2f2","_resolved":"file:../d-118323-54797-57xv2z.992jnpzaor/package.tgz","_from":"../d-118323-54797-57xv2z.992jnpzaor/package.tgz"}